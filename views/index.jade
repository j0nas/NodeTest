extends layout
block jumbotroncontent
    h1 Welcome
        if loggedin
            span=", " + username + "!"
        else
            span !

block content
    h1 Currently available features
    h4 (Must be signed in.)
    ul#links
        li
            a(href="/users/") List users
        li
            a(href="/users/new") Create user account
        li
            a(href="/admin") Administrator's control panel
        li
            a(href="/quiz/new") Create a new quiz
        li
            a(href="/quiz/") List available quizes
        li
            a(href="/quiz/list/") Pretty-list and offer available quizes
        br
        li Login, logout
        li User passwords are stored and validated with SHA1 encryption (npm:password-hash)
        li User sessions!
        li Normalized navbar
        li Favicon
        li 31.12@0242: list users only when logged in
        li 31.12@0442: Admin control panel!
        li 31.12@0442: User deletion @ admin CP
        li 31.12@0512: Deleted user's "delete" buttons fade out @ admin CP
        li 31.12@0549: Correct handling of loggedin status for 404 pages, ect. Shows back button.
        li 02.01@0152: Front end for creating quizes
        li 02.01@0419: Creating and persisting quizes!
        li 02.01@sometimeidon'tevenremember: Listing quizes
        li 02.01@0521: Themes
        li 02.01@1431: Proper JSON formatting (json spaces = 4)
        li 02.01@1540: Tables @ admin CP - formatting and parsing using Bootstrap Table (WHICH IS AN AMAZING LIBRARY!)
        li 02.01@1613: Delete quizes and users from admin cp GUI!
        li 05.01@0600: It. Finally. Works. NewQuiz JSON now being parsed correctly!
        li 06.01@XXXX: Listing and offering quizes -> provide logged-in users ability to take quizes
        li 06.01@XXXX: users taking quizes!

    h1 To-do
    ul
        li Update package dependencies list?
        li.
            Figure out resource usage? When to close DB connection, ect.<br>
            Perhaps this isn't needed - the server instanciates a single connection,
            and maintains it, no?
        li Figure out a nice way to refractor
        li Proper routes management
        li Session privilege checker middleware
        li More failsafe checks? Is logged in, appropriate privileges..
        li Checks to prevent creating accounts with similar usernames & other sanitation?
        li Log in with account & start session when created account (redirect?)
        li "Forgot password?" option
        li Actually display 401 error messages
        li Users able to take quizes
        li navbar with links, dynamically loaded according to user privilege
        li Validate quiz answers @ server
        li Display results
        li Persist user quiz stats (store stats @ user, not @ quiz)
        li List user stats
        li User profile page
        li Implement session checking middleware, I beleve some serious refactoring is in order to amp up development efficiency
        li Merge quiz.jade and quizdone.jade, use same logic for both but with different conditions
        li See if you can merge other view files with conditional logic. Ideally, everything related to quizes should be in one view, ect?


    h1 NPM package dependencies
    ul#packagedependencies
        li
            a(href="https://www.npmjs.com/package/express-session") express-session
        li
            a(href="https://www.npmjs.com/package/password-hash") password-hash

    h1 Other dependencies
    ul#otherdependencies
        li
            a(href="http://wenzhixin.net.cn/p/bootstrap-table/docs/") Bootstrap Table